import { React, useState } from "react"
import CreateCategory from "./CreateCategory.jsx"
import { useDispatch, useSelector } from "react-redux"
import Button from "./Button.jsx"
import { selectCategory } from '../features/categorySlice.js'

export default function Category(){
    const dispatch  = useDispatch()
    const [showCreateCategory, setShowCreateCategory] = useState(false)
    const categoryList = useSelector((state) => state.categories.CategoryList)

    function toggleCreateComponent(){
        setShowCreateCategory(prev => !prev)
    }
    function handelCategoryTasks(id){
        dispatch(selectCategory(id))
    }
    return (
        <div>
            <div className="flex items-center px-2 mt-4 h-[68px] bg-white rounded-[15px] mx-10">
                <div className="flex flex-row items-center justify-start gap-2">
                    {categoryList.map(({name, id}) => (
                        <Button key={id} text={name} onClick={() => handelCategoryTasks(id)}/>
                    ))}
                </div>
                <div className="absolute right-14">
                <div
                className="inline-flex items-center justify-center rounded-2xl size-14 bg-lime-100 "
                onClick={toggleCreateComponent}>
                <svg xmlns="http://www.w3.org/2000/svg" width="29" height="28" viewBox="0 0 29 28" fill="none">
  <path d="M13.3251 6.2265C13.3251 5.81233 13.1081 5.43783 12.8572 5.10767C12.596 4.77327 12.4529 4.36181 12.4501 3.9375C12.4501 2.72883 13.6249 1.75 15.0751 1.75C16.5252 1.75 17.7001 2.73 17.7001 3.9375C17.7001 4.368 17.5507 4.76933 17.2929 5.10767C17.0421 5.43783 16.8251 5.81233 16.8251 6.2265C16.8251 6.61383 17.1494 6.92417 17.5367 6.90083C19.7651 6.76783 21.9584 6.50183 24.1074 6.11217C24.2245 6.09095 24.3446 6.09382 24.4605 6.1206C24.5764 6.14739 24.6856 6.19753 24.7815 6.26796C24.8774 6.33839 24.9579 6.42763 25.0181 6.53023C25.0783 6.63282 25.117 6.74662 25.1317 6.86467C25.3958 8.97512 25.5422 11.0986 25.5704 13.2253C25.5715 13.327 25.5523 13.4278 25.5141 13.522C25.4758 13.6162 25.4192 13.7018 25.3476 13.7739C25.2759 13.846 25.1906 13.9031 25.0967 13.9419C25.0028 13.9807 24.9021 14.0005 24.8004 14C24.3874 14 24.0129 13.783 23.6827 13.5322C23.3483 13.271 22.9369 13.1278 22.5126 13.125C21.3051 13.125 20.3251 14.2998 20.3251 15.75C20.3251 17.2002 21.3051 18.375 22.5126 18.375C22.9431 18.375 23.3444 18.2257 23.6827 17.9678C24.0129 17.717 24.3874 17.5 24.8016 17.5C25.1632 17.5 25.4514 17.8057 25.4246 18.1662C25.2877 20.0607 25.056 21.9473 24.7304 23.8187C24.6995 23.9961 24.6145 24.1597 24.4871 24.2871C24.3598 24.4144 24.1962 24.4994 24.0187 24.5303C21.8954 24.9002 19.7336 25.1522 17.5379 25.2793C17.446 25.2843 17.354 25.2704 17.2676 25.2385C17.1812 25.2066 17.1022 25.1575 17.0354 25.094C16.9687 25.0305 16.9156 24.9541 16.8795 24.8694C16.8433 24.7848 16.8248 24.6936 16.8251 24.6015C16.8251 24.1873 17.0421 23.8128 17.2929 23.4827C17.5507 23.1443 17.7001 22.743 17.7001 22.3125C17.7001 21.105 16.5252 20.125 15.0751 20.125C13.6249 20.125 12.4501 21.105 12.4501 22.3125C12.4501 22.743 12.5994 23.1443 12.8572 23.4827C13.1081 23.8128 13.3251 24.1873 13.3251 24.6015C13.3254 24.7016 13.3057 24.8007 13.267 24.8931C13.2283 24.9854 13.1715 25.069 13.0999 25.139C13.0283 25.2089 12.9434 25.2638 12.8502 25.3003C12.757 25.3369 12.6575 25.3543 12.5574 25.3517C10.7208 25.2998 8.88784 25.1596 7.06474 24.9317C6.9467 24.9169 6.8329 24.8783 6.7303 24.818C6.62771 24.7578 6.53847 24.6773 6.46804 24.5814C6.39761 24.4856 6.34747 24.3764 6.32068 24.2604C6.29389 24.1445 6.29102 24.0244 6.31224 23.9073C6.65407 22.0243 6.90024 20.1075 7.04607 18.1627C7.05218 18.0777 7.04067 17.9924 7.01227 17.9121C6.98387 17.8318 6.93919 17.7583 6.88102 17.6961C6.82286 17.6338 6.75247 17.5843 6.67427 17.5506C6.59607 17.5168 6.51174 17.4996 6.42657 17.5C6.01241 17.5 5.63791 17.717 5.30774 17.9678C4.96941 18.2257 4.56807 18.375 4.13757 18.375C2.92891 18.375 1.95007 17.2002 1.95007 15.75C1.95007 14.2998 2.93007 13.125 4.13757 13.125C4.56807 13.125 4.96941 13.2743 5.30774 13.5322C5.63791 13.783 6.01241 14 6.42657 14C6.52806 14.0005 6.62863 13.9807 6.72243 13.942C6.81623 13.9032 6.90138 13.8462 6.97292 13.7742C7.04447 13.7022 7.10099 13.6167 7.13918 13.5227C7.17738 13.4287 7.19649 13.328 7.19541 13.2265C7.16988 11.3472 7.04917 9.4703 6.83374 7.60317C6.81847 7.47221 6.833 7.3395 6.87623 7.21495C6.91946 7.09039 6.99028 6.97722 7.08339 6.88388C7.17651 6.79054 7.28951 6.71945 7.41396 6.67592C7.53841 6.63239 7.67108 6.61755 7.80207 6.6325C9.36891 6.81333 10.9556 6.92883 12.5586 6.9755C12.6585 6.97816 12.7579 6.96073 12.8509 6.92425C12.944 6.88777 13.0288 6.83298 13.1003 6.76313C13.1717 6.69328 13.2285 6.60979 13.2671 6.51761C13.3057 6.42544 13.3254 6.32644 13.3251 6.2265Z" fill="#75AB5C"/>
</svg>
                </div>
                </div>
            </div>

            {
                showCreateCategory && (
                    < CreateCategory setShowCreateCategory={setShowCreateCategory} />
                )
            }

        </div>
    )
}
